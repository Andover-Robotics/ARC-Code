#pragma config(Hubs,  S1, HTMotor,  HTServo,  none,     none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Motor,  motorA,          left_motor,    tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorB,          right_motor,   tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  motorC,          slide0,        tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  mtr_S1_C1_1,     chain0,        tmotorNXT, PIDControl, encoder)
#pragma config(Motor,  mtr_S1_C1_2,     motorE,        tmotorTetrix, openLoop)
#pragma config(Servo,  srvo_S1_C2_1,    servo1,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_2,    servo2,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S1_C2_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//Bobby Shmohan ft. Shish Brown Dynamite, produced by Brown Sugar
//Rookie team code
//2014-2015
/* Didn't want to redon Rohan's code so i just put it on pastebin ~safi
Teleop http://pastebin.com/QRyCrax3
Autonomous http://pastebin.com/6qFtjak7 */
int highspeed = 75;
int mediumspeed = 30;
#include "JoystickDriver.c"


void checkdriving()
	{
		getJoystickSettings(joystick);
			if(joystick.joy1_y1 > 5 || joystick.joy1_y1 < -5)
			{
				motor[left_motor] = highspeed;
				motor[right_motor] = highspeed;
			}
			else
			{
				motor[left_motor] = 0;
				motor[left_motor] = 0;
			}
			if(joystick.joy1_y2 > 5 || joystick.joy1_y2 <-5)
			{
				motor[right_motor] = -highspeed;
				motor[left_motor] = -highspeed;
			}
			else
			{
				motor[right_motor] = 0;
				motor[left_motor] = 0;
			}
}
void slidemech()
	{
		getJoystickSettings(joystick);
		if(joy1Btn(7) == 1)
		{
			motor[slide0] = mediumspeed;
		}
		else
		{
			motor[slide0] = 0;
		}
		if(joy1Btn(5) == 1)
		{
			motor[slide0] = -mediumspeed;
		}
		else
		{
			motor[slide0] = 0;
		}

	}
void chainmech()
	{
		getJoystickSettings(joystick);
		if(joy1Btn(8) == 1)
		{
			motor[chain0] = mediumspeed;
		}
		else
		{
			motor[chain0] = 0;
		}
		if(joy1Btn(6) == 1)
		{
			motor[chain0] = -mediumspeed;
		}
		else
		{
			motor[chain0] = 0;
		}
	}
void turninplace()
{
	getJoystickSettings(joystick);
	if(joystick.joy1_x1 > 5 || joystick.joy1_x1 < -5)
	{
		motor[left_motor] = -mediumspeed;
		motor[right_motor] = mediumspeed;
	}
	else
	{
		motor[left_motor] = 0;
		motor[right_motor] = 0;
	}
	if(joystick.joy1_x2 > 5 || joystick.joy1_x2 < -5)
	{
		motor[left_motor] = mediumspeed;
		motor[right_motor] = -mediumspeed;
	}
	else
	{
		motor[left_motor] = 0;
		motor[right_motor] = 0;
	}
}


task main()
{
waitForStart();
	while(true)
{
			getJoystickSettings(joystick);
			checkdriving();
			slidemech();
			chainmech();
			turninplace();
}
}
