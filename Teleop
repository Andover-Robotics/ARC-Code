#pragma config(Hubs,  S1, HTMotor,  HTMotor,  HTServo,  none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Motor,  mtr_S1_C1_1,     Left,          tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C1_2,     Right,         tmotorTetrix, openLoop, reversed, encoder)
#pragma config(Motor,  mtr_S1_C2_1,     LinearSlideMotor, tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C2_2,     ArmMotor,      tmotorTetrix, openLoop, encoder)
#pragma config(Servo,  srvo_S1_C3_1,    ArmExtend,            tServoContinuousRotation)
#pragma config(Servo,  srvo_S1_C3_2,    ArmJoint,             tServoStandard)
#pragma config(Servo,  srvo_S1_C3_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S1_C3_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S1_C3_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S1_C3_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "JoystickDriver.c"

void driveLeft(){
	if(joystick.joy1_y1 < -5 || joystick.joy1_y1 > 5){
		motor[Left] = joystick.joy1_y1;
	}
}
void driveRight(){
	if(joystick.joy1_y2 < -5 || joystick.joy1_y2 > 5){
		motor[Right] = joystick.joy1_y2;
	}
}
void raiseLinearSlide(){
	if(joystick.joy2_y1 < -5 || joystick.joy2_y1 > 5){
		motor[LinearSlideMotor] = joystick.joy2_y1;
	}
}
void armMove(){
	if(joy2Btn(6) == 1){
		motor[ArmMotor] = 70;
	}
	if(joy2Btn(8) == 1){
		motor[ArmMotor] = -70;
	}
}
void armExtension(){
	if(joy2Btn(5)	== 1){
		servo[ArmExtend] = 60;
	}
	if(joy2Btn(7) == 1){
		servo[ArmExtend] = 194;
	}
	if(joy2Btn(7) == 0 && joy2Btn(5) == 0){
		servo[ArmExtend] = 127;
	}
}
void armRotation(){
	if(joy2Btn(1) == 1){
		servo[ArmJoint] += 1;
	}
	if(joy2Btn(3) == 1){
		servo[ArmJoint] += -1;
	}
}
task main()
{
	waitForStart();
	while(true){
		getJoystickSettings(joystick);
		driveLeft();
		driveRight();
		raiseLinearSlide();
		armMove();
		armExtension();
		armRotation();
	}
}
