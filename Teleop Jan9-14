#pragma config(Hubs,  S1, HTMotor,  HTMotor,  HTMotor,  HTServo)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Motor,  mtr_S1_C1_1,     L,             tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C1_2,     R,             tmotorTetrix, openLoop, reversed, encoder)
#pragma config(Motor,  mtr_S1_C2_1,     belt,          tmotorTetrix, openLoop, reversed, encoder)
#pragma config(Motor,  mtr_S1_C2_2,     slide,         tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C3_1,     sweep,         tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C3_2,     none,          tmotorTetrix, openLoop)
#pragma config(Servo,  srvo_S1_C4_1,    release,              tServoStandard)
#pragma config(Servo,  srvo_S1_C4_2,    servo2,               tServoNone)
#pragma config(Servo,  srvo_S1_C4_3,    servo3,               tServoNone)
#pragma config(Servo,  srvo_S1_C4_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S1_C4_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S1_C4_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

    #include "JoystickDriver.c"
    int slidevalue = 13; //The current speed of the ballbelt
    float f;
    float f1;
    #define HISPDLIFT 30

    void debug() //plays a tone when button is pressed
    {
            if (joy1Btn(1) == 1)
            {
                    PlayImmediateTone(440,100);
                    wait10Msec(100);
            }
    }
    /*
    Used for going left
    */
    void driveLeft(){

            if(joystick.joy1_y1 < -5 || joystick.joy1_y1 > 5){
                    f = (((float)pow(joystick.joy1_y1, 3))/((float)pow(128, 3)));
                    motor[L] = ( f * 75); //Makes control logarithmic; initially starting the motor requires a higher joystick value
            }
            else{
                    motor[L] = 0;
            }
    }
    /*
    Used for going right
    */
    void driveRight(){
            if(joystick.joy1_y2 < -5 || joystick.joy1_y2 > 5){
                    f1 = ((float)pow(joystick.joy1_y2, 3))/((float)pow(128, 3));
                    motor[R] = (int)( f1 * 75 ); //Makes control logarithmic
            }
            else{
                    motor[R] = 0;
            }
    }
    /*
    Used for manually lifting the linear slide if neccesary
    */
    void liftRaise(){

            if(joystick.joy2_y1 < -5 || joystick.joy2_y1 > 5){
                    motor[slide] = joystick.joy2_y1 * 0.3; //Linear slide has linear control
            }
            else{
                    motor[slide] = 0;
            }

    }
    /*
    Used to control the ball belt
    */
    void beltball(){

            if(joy2Btn(1) == 1)  //The ball belt spins when button 1 is pressed
            {
                    motor[belt] = slidevalue; //The current speed of the ballbelt
            }
            if(joy2Btn(3) == 1)  //It stops when button 3 is pressed
            {
                    motor[belt] = 0;
            }
            if(joy2Btn(2) == 1 && slidevalue > 1)  //The ball belt slows when button 2 is pressed
            {
                    slidevalue--;
            }
            if(joy2Btn(4) == 1 && slidevalue < 18) //The ball belt quickens when button 4 is pressed
            {
                    slidevalue++;
            }
    }

    void sweeper(){ //controls vertical sweeper
    	if(joy2Btn(7) == 1){
    		motor[sweep] = 15;
    	}
    	else if(joy2Btn(8) == 1) {
    		motor[sweep] = -15;
    	}
    	else{
    		motor[sweep] = 0;
    	}
   	}

   	void decouple(){ //controls goal release servo
   		if(joy2Btn(5)==1){
   			servo[release] += 2;
   		}
   		if(joy2Btn(6)==1){
   			servo[release] -=2;
   		}
   	}
    task main()
    {
            waitForStart();
            PlayImmediateTone(600,100);
            while(true){
                    getJoystickSettings(joystick);
                    driveLeft();
                    debug();
                    driveRight();
                    beltball();
                    liftRaise();
                    sweeper();
            }
    }
